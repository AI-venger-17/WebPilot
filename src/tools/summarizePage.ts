// tools/summarizePage.ts
import dotenv from 'dotenv';
dotenv.config();

import puppeteer from 'puppeteer-extra';
import StealthPlugin from 'puppeteer-extra-plugin-stealth';
puppeteer.use(StealthPlugin());

type HuggingFaceSummaryResponse = { summary_text: string }[];

export async function summarizePage(url: string): Promise<string> {
  try {
    const browser = await puppeteer.launch({ headless: true });
    const page = await browser.newPage();
    await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 20000 });

    const text = await page.evaluate(() =>
      document.body.innerText.slice(0, 2000) // Trim text to prevent large inputs
    );
    await browser.close();

    const response = await fetch("https://api-inference.huggingface.co/models/facebook/bart-large-cnn", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${process.env.HUGGINGFACE_API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ inputs: `Summarize this:\n${text}` })
    });

    if (!response.ok) {
      const errText = await response.text();
      console.error("❌ HuggingFace API error:", errText);
      return `❌ HuggingFace API error: ${errText}`;
    }

    const result = (await response.json()) as HuggingFaceSummaryResponse;

    if (!result || !result[0]?.summary_text) {
      console.warn("⚠️ No summary returned:", result);
      return "⚠️ No summary generated by model.";
    }

    return result[0].summary_text;

  } catch (err) {
    console.error("❌ Error in summarizePage:", err);
    return "❌ Error summarizing the page.";
  }
}
